apiVersion: v1
kind: ConfigMap
metadata:
  name: fluent-bit-config
  namespace: episilia
  labels:
    k8s-app: fluent-bit
data:
  # Configuration files: server, input, filters, and output
  # =======================================================
  fluent-bit.conf: |
    [SERVICE]
      Flush         5
      Log_Level     debug
      Daemon        off
      Parsers_File  parsers.conf
      HTTP_Server   On
      HTTP_Listen   0.0.0.0
      HTTP_Port     2020

    @INCLUDE input-kubernetes.conf
    @INCLUDE filter-kubernetes.conf
    @INCLUDE output-kafka.conf

  input-kubernetes.conf: |
    [INPUT]
      Name            tail
      Path            /var/log/containers/*{namespace}*.log
      Key             message
      Parser          all
      Path_Key        file
      Tag             kube.*
      Mem_Buf_Limit   5MB
      Skip_Long_Lines On
      Read_from_head  true

  filter-kubernetes.conf: |
    [FILTER]
      Name                kubernetes
      Match               kube.*
      Kube_URL            https://kubernetes.default.svc:443
      Kube_CA_File        /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
      Kube_Token_File     /var/run/secrets/kubernetes.io/serviceaccount/token
      Merge_Log           On
      K8S-Logging.Parser  On
      K8S-Logging.Exclude On
      Merge_Log_Key       application_log

    [FILTER]
      Name modify
      Match kube.*
      Rename log content
      Remove kubernetes.docker_id
      Remove kubernetes.host 
      Remove kubernetes.labels.app
      Remove kubernetes.container_hash
      Remove kubernetes.pod_id
      Remove kubernetes.pod_name
      Remove kubernetes.labels.version
      Remove kubernetes.container_image
      Remove kubernetes.labels.version
    
    [FILTER]
      Name lua
      Match *
      script convert_timestamp.lua
      call convert_timestamp


  output-kafka.conf: |
    [OUTPUT]
      Name           kafka 
      Match          *
      Brokers        <broker_ip>:<port>
      Topics         <topic>
      Timestamp_Key  timestamp
      Format         json
      json_date_key  timestamp
      json_date_format iso8601

  parsers.conf: |
    [PARSER]
      Name        all
      Format      regex
      Regex       ^(?<time>\d{4}-\d{1,2}-\d{1,2} \d{1,2}:\d{1,2}:\d{1,2}) - (?<message>.*)$
      Time_Key    time
      Time_Format %Y-%m-%d %H:%M:%S
      Time_Keep   On

  convert_timestamp.lua: |
    function convert_timestamp(tag, timestamp, record)
      local epoch_time = record["timestamp"]
      record["timestamp"] = os.date('%Y-%m-%dT%H:%M:%S', epoch_time)
      return 1, timestamp, record
    end
